version: "2"

services:
  node:
    container_name: node-pc-1
    image: ${DOCKER_ACCT}/node-pc-1
    build:
      context: .
      dockerfile: .docker/node.development.dockerfile
  #  command: nodemon --debug=6666
    ports:
      - "8080:3000"
      # gulp nonsense
      - "5000:5000"
      # node-inspector
      - "10100:10100"
      # webpack dev server
      - "3001:3001"
    volumes:
      - .:/usr/src/app
      - 'node_modules:/usr/src/app/node_modules'
      - 'csv_upload_node_modules:/usr/src/app/lib/csvUpload/node_modules'
      - 'client_node_modules:/usr/src/app/lib/client/node_modules'
      - 'auth_node_modules:/usr/src/app/lib/auth/node_modules'
      # - '/etc/localtime:/etc/localtime'
    working_dir: /usr/src/app
    # links:
      # - postgres
    env_file:
      - ./.docker/env/app.${APP_ENV}.env
    networks:
      - pc-network

  postgres:
    container_name: postgres
    image: ${DOCKER_ACCT}/postgres
    build:
      context: .
      dockerfile: .docker/postgres.development.dockerfile
    env_file:
      - ./.docker/env/postgres.${APP_ENV}.env
    ports:
      - "5555:5432"
    volumes:
      - postgres-${APP_ENV}:/var/lib/postgresql/data
    networks:
      - pc-network

  # redis:
  #   container_name: redis
  #   image: ${DOCKER_ACCT}/redis
  # #  environment:
  # #    TZ: 'Europe/Berlin'
  #   build:
  #     context: .
  #     dockerfile: .docker/redis.development.dockerfile
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - 'redis:/var/lib/redis'
  #   networks:
  #     - pc-network
  #   restart: always

volumes:
  postgres-testing:
    driver: "local"
  postgres-development:
    driver: "local"
  redis:
    driver: "local"
  node_modules:
    driver: "local"
  csv_upload_node_modules:
    driver: "local"
  client_node_modules:
    driver: "local"
  auth_node_modules:
    driver: "local"

networks:
  pc-network:
    driver: bridge
